version: '3.8'

services:
  metahuman-converter:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: metahuman-fbx-converter
    volumes:
      # Mount input and output directories
      - ./input:/app/input:rw
      - ./output:/app/output:rw
      - ./temp:/app/temp:rw
      # Mount source code for development (comment out for production)
      - ./metahuman_converter:/app/metahuman_converter:ro
      - ./tests:/app/tests:ro
      - ./example_usage.py:/app/example_usage.py:ro
    environment:
      - PYTHONPATH=/app
      - LOG_LEVEL=INFO
      - DISPLAY=:99
    working_dir: /app
    # Default command - can be overridden
    command: ["python", "example_usage.py"]
    
  # Development service with source code mounted for live editing
  metahuman-converter-dev:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: metahuman-fbx-converter-dev
    volumes:
      - ./input:/app/input:rw
      - ./output:/app/output:rw
      - ./temp:/app/temp:rw
      # Mount entire source for development
      - .:/app:rw
    environment:
      - PYTHONPATH=/app
      - LOG_LEVEL=DEBUG
      - DISPLAY=:99
    working_dir: /app
    command: ["bash"]
    stdin_open: true
    tty: true
    
  # Service for running tests
  metahuman-converter-test:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: metahuman-fbx-converter-test
    volumes:
      - .:/app:ro
    environment:
      - PYTHONPATH=/app
      - LOG_LEVEL=DEBUG
    working_dir: /app
    command: ["python", "-m", "pytest", "tests/", "-v", "--cov=metahuman_converter"]
    
  # Service for running specific FBX file conversion
  metahuman-converter-convert:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: metahuman-fbx-converter-convert
    volumes:
      - ./input:/app/input:rw
      - ./output:/app/output:rw
      - ./temp:/app/temp:rw
    environment:
      - PYTHONPATH=/app
      - LOG_LEVEL=INFO
      - INPUT_FILE=${INPUT_FILE:-input-file.fbx}
      - OUTPUT_FILE=${OUTPUT_FILE:-output.glb}
    working_dir: /app
    # This will be overridden by docker-compose run commands
    command: ["python", "-c", "
from pathlib import Path;
from metahuman_converter.validation import validate_fbx;
from metahuman_converter.logging_config import setup_logging;
import os;
setup_logging();
input_file = Path(os.getenv('INPUT_FILE', 'input-file.fbx'));
if input_file.exists():
    result = validate_fbx(input_file);
    print(f'Validation: {\"PASSED\" if result.is_valid else \"FAILED\"}');
    print(f'Blendshapes: {len(result.found_blendshapes)}/52');
    print(f'Bones: {len(result.found_bones)}');
else:
    print(f'Input file not found: {input_file}');
"] 